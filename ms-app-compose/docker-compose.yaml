# docker-compose up --detach

version: '2.3'
services:
  mysql:
    restart: always
    image: mariadb:10.3
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - ./store/:/var/lib/mysql
    mem_limit: 256m
    networks:
      - ms_app_network
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=local
      - MYSQL_USER=root
      - MYSQL_PASSWORD=123456
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=123456

  mysql-admin:
    restart: always
    image: phpmyadmin/phpmyadmin
    container_name: mariadb-phpmyadmin
    ports:
      - "8001:80"
    mem_limit: 128m
    networks:
      - ms_app_network
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456

  dn-ms-user:
    restart: always
    image: dn-ms-user
    container_name: dn-ms-user
    volumes:
      - ./ms-user/:/var/ms-user-data
    ports:
      - "17001:18001"
    mem_limit: 128m
    networks:
      - ms_app_network
    depends_on:
      - mysql
      - redis-server
      - rabbitmq
    env_file:
      - share.env
  
  dn-ms-notification:
    restart: always
    image: dn-ms-notification
    container_name: dn-ms-notification
    volumes:
      - ./ms-notification/:/var/ms-notification-data
    ports:
      - "17002:18002"
    mem_limit: 128m
    networks:
      - ms_app_network
    depends_on:
      - mysql
      - redis-server
      - rabbitmq
    env_file:
      - share.env

  redis-server:
    restart: always
    image: redis:4.0
    container_name: redis-server
    command: /bin/bash -c 'redis-server --appendonly yes'
    sysctls:
      - net.core.somaxconn=65535
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    mem_limit: 64m
    networks:
      - ms_app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ./rabbitmq/:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    
    networks:
      - ms_app_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    environment:
      SPAN_STORAGE_TYPE: badger 
      BADGER_EPHEMERAL: 'false'
      BADGER_DIRECTORY_VALUE: /badger/data
      BADGER_DIRECTORY_KEY: /badger/key

    volumes:
      - ./jaeger/:/badger
    networks:
      - ms_app_network

  hotrod:
    image: jaegertracing/example-hotrod:latest
    container_name: jeager-example-remove
    ports: 
      - "8200:8080"
    command: ["all"]
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    networks:
      - ms_app_network
    depends_on:
      - jaeger


volumes:
  mysql:
    driver: local
  redis:
    driver: local
  

networks:
  ms_app_network:
    driver: bridge
